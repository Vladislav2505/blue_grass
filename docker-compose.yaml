name: "blue_grass"

services:

  # App Service
  app:
    container_name: blue_grass_app
    build:
      context: .
      target: php
    environment:
      - CONTAINER_ROLE=app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    depends_on:
      - database
      - node
      - queue
    restart: always
    networks:
      - blue_grass_network

  # Laravel Queue
  queue:
    container_name: blue_grass_queue
    build:
      context: .
      target: php
    environment:
      - CONTAINER_ROLE=queue
    working_dir: /var/www
    volumes:
      - ./:/var/www
    restart: always
    networks:
      - blue_grass_network

  # Server Service
  server:
    container_name: "blue_grass_server"
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./docker/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/var/www
    restart: always
    depends_on:
      - app
    networks:
      - blue_grass_network

  # Database Service
  database:
    container_name: blue_grass_db
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    restart: always
    networks:
      - blue_grass_network

  # Npm Service
  node:
    container_name: blue_grass_npm
    build:
      context: .
      target: node
    ports:
      - 5173:5173
    volumes:
      - ./:/var/www
    tty: true
    networks:
      - blue_grass_network

volumes:
  db-data: ~

networks:
  blue_grass_network:
    driver: bridge
